# @package _global_
defaults:
  - /pipeline: ss

model:
  _name_: dna_embedding
  d_model: 256
  n_layer: 2
  d_inner: ${eval:4 * ${.d_model}}
  vocab_size: 32
  resid_dropout: 0.0
  embed_dropout: 0.1
  fused_mlp: False # figure out how to use fused MLP, maybe only with bf16 + a100
  fused_dropout_add_ln: false       
  checkpoint_mixer: false  # set true for memory reduction
  checkpoint_mlp: false  # set true for memory reduction                                                                                                       
  residual_in_fp32: True
  pad_vocab_size_multiple: 8
  layer:
    _name_: hyena
    emb_dim: 5
    filter_order: 64
    short_filter_order: 3
    l_max: ${eval:${dataset.max_length}+2}  # required to be set the same as the pretrained model if using, don't forget the +2!  ${eval:${dataset.max_length}+2}
    modulate: True
    w: 10
    lr: ${optimizer.lr}
    wd: 0.0
    lr_pos_emb: 0.0

# model:
#   _name_: dna_embedding
#   d_model: 256
#   n_layer: 2
#   d_inner: ${eval:4 * ${.d_model}}
#   vocab_size: 10262      ##TODO: remember to change this !!!
#   resid_dropout: 0.0
#   embed_dropout: 0.1
#   fused_mlp: False # figure out how to use fused MLP, maybe only with bf16 + a100
#   fused_dropout_add_ln: false
#   checkpoint_mixer: false  # set true for memory reduction
#   checkpoint_mlp: false  # set true for memory reduction
#   residual_in_fp32: true
#   pad_vocab_size_multiple: 8
#   layer:
#     _name_: hyena
#     emb_dim: 5
#     filter_order: 64
#     short_filter_order: 3
#     l_max: ${eval:${dataset.max_length}+2}
#     modulate: true
#     w: 10
#     lr: ${optimizer.lr}
#     wd: 0.0
#     lr_pos_emb: 0.0


# new task, allows you to pass a mask (or not), and will only average over those tokens
task:
  _name_: multiclass
  loss: cross_entropy
  metrics:
    - accuracy
  torchmetrics: null

trainer:
  accelerator: gpu
  devices: 1
  num_nodes: 1
  accumulate_grad_batches: ${div_up:${train.global_batch_size}, ${eval:${trainer.devices} * ${dataset.batch_size} * ${trainer.num_nodes}}}
  max_epochs: 100
  precision: 32  # bf16 only a100
  gradient_clip_val: 1.0
  # strategy: null

dataset:
  # batch_size: 32  # Per GPU
  batch_size: 256
  max_length: 1024 # 262144, 524288
  # optional, default is max_length
  # max_length_val: 512
  # max_length_test: 512
  tokenizer_name: char
  add_eos: false
  rc_aug: false  # reverse complement augmentation
  return_mask: false
  padding_side: left  # right is ok too, depending on what you want to do


optimizer:
  lr: 6e-4
  weight_decay: 0.1

train:
  gpu_mem: ${eval:"round(float(__import__('subprocess').check_output('nvidia-smi -i 0 --query-gpu=memory.total --format=csv,noheader,nounits', shell=True).strip().decode()) / 1000)"}
  seed: 2222
  global_batch_size: ${dataset.batch_size}
  remove_test_loader_in_eval: false  # no test set in this benchmark
  pretrained_model_strict_load: False  # false allows encoder/decoder to be used if new model uses it
  # for loading backbone and not head, requires both of these flags below
  
  # pretrained_model_path: /home/lr/zym/research/hyena-dna/outputs/2023-12-22/hyena8layer/checkpoints/test/loss.ckpt
  pretrained_model_path: /home/lr/zym/research/hyena-dna/outputs/2023-12-23/hyena2layerfull/checkpoints/test/loss.ckpt
  # pretrained_model_path: /home/lr/zym/research/hyena-dna/outputs/2024-01-18/ProtHyena-ss/checkpoints/val/accuracy.ckpt
  # pretrained_model_path: /home/lr/zym/research/hyena-dna/outputs/2024-01-10/Hyena-Large/checkpoints/test/loss.ckpt
  # pretrained_model_path: /home/lr/zym/research/hyena-dna/outputs/2024-01-12/10-34-43-032057/checkpoints/last.ckpt
  # pretrained_model_path: /home/lr/zym/research/hyena-dna/outputs/ProtHyena-bpe/checkpoints/test/loss.ckpt
  pretrained_model_state_hook:
    _name_: load_backbone
    freeze_backbone: false  # seems to work much better if false (ie finetune entire model)
  test: true
